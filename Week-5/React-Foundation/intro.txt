Why Do we need React??
    -> For static websites we dont need React
    -> For Dynamic websites, libraries like React,Vue,Angular make DOM manipulations easy
    -> React is just an easier way to write normal HTML/CSS/JS. It's a new syntax, that under the hood converts to HTML/CSS/JS

    -> People realised it’s harder to do DOM manipulation the conventional way
    -> There were libraries that came into the picture that made it slightly easy, but still for a very big app it’s very hard (JQuery)
    -> Eventually, VueJS/React created a new syntax to do frontends
    -> Under the hood, the react compiler convert your code to HTML/CSS/JS

Code without React for a simple counter button
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Counter Button</title>
</head>
<script>
    function counterfunc(){
        const currentValue = document.getElementById("btn").innerHTML;
        let num = currentValue.split(" ")[1];
        let new_counter = parseInt(num) + 1;
        document.getElementById("btn").innerHTML = "Counter" + new_counter;
    }
</script>
<body>
    <button onclick = "counterfunc()" id = "btn"> Counter 0</button>
</body>
</html>
Problem with this approach:
    -> Too much code you have to write as the developer
    -> As your app scales(todo app for eg), this gets harder and harder

To create a react app, you usually need to worry about three things
    -> State 
        -> An object that represents the current state of the app
        -> It represents the dynamic things in your app(thinhs that change)
        -> For example, the value of the counter
        -> eg:  {count:0};
        -> For the linkedin Topbar, it could be something like this 
        {
            topbar:{
                home:0,
                myNetwork:"99+",
                jobs:0,
                messaging:0,
                notifications:19
            }
        }
    -> Components
        -> How a DOM element should render, given a state
        -> It's a reusable, dynamic, HTML snippet that changes given the state
        -> Eg the button in the counter is a Components
        -> Eg the home button, myNetwork button, messaging button in the linkedin topbar
    -> Re-rendering
        -> A state change triggers a re-render
        -> A re-render represents the actual DOM being manipulated when the state changes

-> You usually have to define all your components once, and then all you have to do is update the state of your app, react takes care of the re-rendering
